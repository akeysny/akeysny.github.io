I"Y<h2 id="background">Background</h2>
<p>Of the numerous vulnerabilities related to browser-based web applications, cross-site scripting (XSS) is one of the most common and damaging vulnerabilities. The browser is a sophisticated piece of software, not just because it must render content efficiently and portably, but it must also execute associated JavaScript. As a general rule, any system that executes code can be made to execute malicious code if proper protections aren’t used. XSS is a technique in which an attacker is able to “trick” a browser into executing malicious JavaScript that’s not part of the legitimate page. Even though web developers have known about it for years, it’s still easy to let an XSS vulnerability slip through the cracks.</p>

<h2 id="the-webpage">The webpage</h2>
<p><img src="/https://today.duke.edu/sites/default/files/styles/story_hero/public/Lock%20HERO.jpg?itok=iVSfFA5n" alt="IMDb page" /></p>

<h2 id="types-of-xss">Types of XSS</h2>
<p>There are three types of Cross-Site Scripting.</p>

<ul>
  <li>Reflected</li>
</ul>

<p>Data from URLs or forms
Runs immediately when data is received</p>

<ul>
  <li>Stored</li>
</ul>

<p>Data from database, cookies, and sessions
Runs later when data is retrieved</p>

<ul>
  <li>DOM-based</li>
</ul>

<p>Data generated by JavaScript
Runs when user triggers JavaScript events</p>
:ET